apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "rabbitmq"
  serviceName: rabbitmq-cluster
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      storageClassName: hostpath
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "3Gi"
  template:
    metadata:
      name: rabbitmq
      namespace: testns-rabbitmq
      labels:
        app: rabbitmq
    spec:
      initContainers:
      - name: "rabbitmq-config"
        image: busybox:1.32.0
        volumeMounts:
        - name: rabbitmq-config
          mountPath: /tmp/rabbitmq
        - name: rabbitmq-config-rw
          mountPath: /etc/rabbitmq
        command:
        - sh
        - -c
        - cp /tmp/rabbitmq/rabbitmq.conf /etc/rabbitmq/rabbitmq.conf && echo '' >> /etc/rabbitmq/rabbitmq.conf;
          cp /tmp/rabbitmq/enabled_plugins /etc/rabbitmq/enabled_plugins
      volumes:
      # - name: inter-node-config 
      #   configMap:
      #     defaultMode: 420
      #     name: mtls-inter-node-tls-config 
      # - name: mtls-inter-node-nodes-tls
      #   secret:
      #     secretName: rabbitmq-mtls-inter-node-nodes-tls
      #     items:
      #     - key: ca.crt
      #       mode: 416
      #       path: ca_certificate.pem
      #     - key: tls.crt
      #       mode: 416
      #       path: server_certificate.pem
      #     - key: tls.key
      #       mode: 416
      #       path: server_key.pem
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
          optional: false
          items:
          - key: enabled_plugins
            path: "enabled_plugins"
          - key: rabbitmq.conf
            path: "rabbitmq.conf"
      - name: rabbitmq-config-rw
        emptyDir: {}
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-data
      serviceAccount: rabbitmq
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: rabbitmq
        image: rabbitmq-cluster-svc-img  
        imagePullPolicy: IfNotPresent
        volumeMounts:
        # - mountPath: /etc/rabbitmq/certs
        #   name: mtls-inter-node-nodes-tls
        - name: rabbitmq-config-rw
          mountPath: "/etc/rabbitmq"
        - name: rabbitmq-data
          mountPath: "/var/lib/rabbitmq/mnesia"
        # - name: inter-node-config
        #   mountPath: /etc/rabbitmq/inter-node-tls.config
        #   subPath: inter_node_tls.config      
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # - name: SERVER_ADDITIONAL_ERL_ARGS
        #   value: "-proto_dist inet_tls -ssl_dist_optfile /etc/rabbitmq/inter-node-tls.config"
        # - name: RABBITMQ_CTL_ERL_ARGS
        #   value: "-proto_dist inet_tls -ssl_dist_optfile /etc/rabbitmq/inter-node-tls.config"
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: "rabbit@$(HOSTNAME).rabbitmq-cluster.testns-rabbitmq.svc.cluster.local"
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-admin
              key: pass
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-admin
              key: user
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbitmq-admin
              key: erlang-cookie
        ports:
        # - name: amqp-ssl
        #   containerPort: 5671    
        #   protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        - name: management
          containerPort: 15672
          protocol: TCP
        - name: dist 
          containerPort: 25672
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        livenessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
        readinessProbe: # probe to know when RMQ is ready to accept traffic
          exec:
            command: ["rabbitmq-diagnostics", "ping"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
      dnsConfig:
          searches:
            - rabbitmq-cluster.testns-rabbitmq.svc.cluster.local
